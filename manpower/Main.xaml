<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:uasa="clr-namespace:UiPath.Activities.System.Arrays;assembly=UiPath.System.Activities" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="BreakTriggerScopeInArgument" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1140,13101.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Activities.System.Arrays</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="800,13036.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="temp" />
      <Variable x:TypeArguments="x:Double" Name="int" />
      <Variable x:TypeArguments="x:Double" Name="M1" />
      <Variable x:TypeArguments="x:Double" Name="N1" />
      <Variable x:TypeArguments="x:Double" Name="O1" />
      <Variable x:TypeArguments="x:Double" Name="R1" />
      <Variable x:TypeArguments="x:Double" Name="T1" />
      <Variable x:TypeArguments="x:String" Name="excel1" />
      <Variable x:TypeArguments="x:String" Name="sn" />
      <Variable x:TypeArguments="x:String" Name="excel2" />
      <Variable x:TypeArguments="sd:DataTable" Name="result" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="737.6,281.6" sap2010:WorkflowViewState.IdRef="InputDialog_11" IsPassword="False" Label="Enter the HC excel file location" Title="Input">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[excel1]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="737.6,281.6" sap2010:WorkflowViewState.IdRef="InputDialog_12" IsPassword="False" Label="Enter the sheet name" Title="sheet name">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[sn]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="737.6,6106.4" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="[excel1]">
      <ueab:ExcelApplicationCard.Body>
        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="704,5796.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IList(x:String)" Name="nlist" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:CreateList x:TypeArguments="x:String" DisplayName="Create List" sap:VirtualizedContainerService.HintSize="641.6,175.2" sap2010:WorkflowViewState.IdRef="CreateList`1_2" NewList="[nlist]" />
            <uasa:AppendItemToList x:TypeArguments="x:String" ItemIndex="{x:Null}" DisplayName="Append Item to List" sap:VirtualizedContainerService.HintSize="641.6,175.2" sap2010:WorkflowViewState.IdRef="AppendItemToList`1_3" ItemToAppend="M" List="[nlist]" />
            <uasa:AppendItemToList x:TypeArguments="x:String" ItemIndex="{x:Null}" DisplayName="Append Item to List" sap:VirtualizedContainerService.HintSize="641.6,175.2" sap2010:WorkflowViewState.IdRef="AppendItemToList`1_5" ItemToAppend="N" List="[nlist]" />
            <uasa:AppendItemToList x:TypeArguments="x:String" ItemIndex="{x:Null}" DisplayName="Append Item to List" sap:VirtualizedContainerService.HintSize="641.6,175.2" sap2010:WorkflowViewState.IdRef="AppendItemToList`1_6" ItemToAppend="O" List="[nlist]" />
            <uasa:AppendItemToList x:TypeArguments="x:String" ItemIndex="{x:Null}" DisplayName="Append Item to List" sap:VirtualizedContainerService.HintSize="641.6,175.2" sap2010:WorkflowViewState.IdRef="AppendItemToList`1_7" ItemToAppend="P" List="[nlist]" />
            <uasa:AppendItemToList x:TypeArguments="x:String" ItemIndex="{x:Null}" DisplayName="Append Item to List" sap:VirtualizedContainerService.HintSize="641.6,175.2" sap2010:WorkflowViewState.IdRef="AppendItemToList`1_8" ItemToAppend="Q" List="[nlist]" />
            <uasa:AppendItemToList x:TypeArguments="x:String" ItemIndex="{x:Null}" DisplayName="Append Item to List" sap:VirtualizedContainerService.HintSize="641.6,175.2" sap2010:WorkflowViewState.IdRef="AppendItemToList`1_9" ItemToAppend="R" List="[nlist]" />
            <uasa:AppendItemToList x:TypeArguments="x:String" ItemIndex="{x:Null}" DisplayName="Append Item to List" sap:VirtualizedContainerService.HintSize="641.6,175.2" sap2010:WorkflowViewState.IdRef="AppendItemToList`1_11" ItemToAppend="S" List="[nlist]" />
            <uasa:AppendItemToList x:TypeArguments="x:String" ItemIndex="{x:Null}" DisplayName="Append Item to List" sap:VirtualizedContainerService.HintSize="641.6,175.2" sap2010:WorkflowViewState.IdRef="AppendItemToList`1_12" ItemToAppend="T" List="[nlist]" />
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="641.6,1922.4" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[nlist]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="608,1716.8" sap2010:WorkflowViewState.IdRef="Sequence_16">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="seven" />
                      <Variable x:TypeArguments="x:String" Name="two" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="545.6,121.6" sap2010:WorkflowViewState.IdRef="Assign_11">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[seven]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[currentItem+"7"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="545.6,121.6" sap2010:WorkflowViewState.IdRef="Assign_12">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[two]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[currentItem+"2"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="545.6,121.6" sap2010:WorkflowViewState.IdRef="Assign_14">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Double">[int]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Double">0</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InterruptibleWhile CurrentIndex="{x:Null}" Condition="[Excel.Sheet(sn).Cell(seven)&lt;=0.8 OR Excel.Sheet(sn).Cell(seven)&gt;=1.05]" DisplayName="While" sap:VirtualizedContainerService.HintSize="545.6,1265.6" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_2">
                      <ui:InterruptibleWhile.Body>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="512,1128" sap2010:WorkflowViewState.IdRef="Sequence_11">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="five" />
                            <Variable x:TypeArguments="x:Int32" Name="val" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="449.6,121.6" sap2010:WorkflowViewState.IdRef="Assign_13">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[five]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[currentItem+"5"]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ueab:ReadCellValueX Cell="[Excel.Sheet(sn).Cell(five)]" DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="449.6,200" sap2010:WorkflowViewState.IdRef="ReadCellValueX_5">
                            <ueab:ReadCellValueX.SaveTo>
                              <OutArgument x:TypeArguments="x:Int32">[val]</OutArgument>
                            </ueab:ReadCellValueX.SaveTo>
                          </ueab:ReadCellValueX>
                          <If Condition="[val=0]" sap:VirtualizedContainerService.HintSize="449.6,415.2" sap2010:WorkflowViewState.IdRef="If_3">
                            <If.Then>
                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,134.4" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:Break sap:VirtualizedContainerService.HintSize="353.6,48" sap2010:WorkflowViewState.IdRef="Break_2" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,102.4" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                          <Assign sap:VirtualizedContainerService.HintSize="449.6,121.6" sap2010:WorkflowViewState.IdRef="Assign_6">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Double">[int]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Double">[int+0.05]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ueab:WriteCellX Cell="[Excel.Sheet(sn).Cell(two)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="449.6,183.2" sap2010:WorkflowViewState.IdRef="WriteCellX_3" Value="[int]" />
                        </Sequence>
                      </ui:InterruptibleWhile.Body>
                    </ui:InterruptibleWhile>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
            <ueab:InsertRowsX SpecificIndex="{x:Null}" DisplayName="Insert Rows" HasHeaders="False" sap:VirtualizedContainerService.HintSize="641.6,228" sap2010:WorkflowViewState.IdRef="InsertRowsX_1" InsertPosition="Start" NbOfRows="1" Range="[Excel.Sheet(sn)]" />
            <ueab:WriteCellX Cell="[Excel.Sheet(sn).Cell(&quot;M1&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="641.6,200" sap2010:WorkflowViewState.IdRef="WriteCellX_4" Value="[((Excel.Sheet(sn).Cell(&quot;M6&quot;)*3.4)/23)/7.16]" />
            <ueab:WriteCellX Cell="[Excel.Sheet(sn).Cell(&quot;N1&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="641.6,200" sap2010:WorkflowViewState.IdRef="WriteCellX_5" Value="[((Excel.Sheet(sn).Cell(&quot;N6&quot;)*1.8)/23)/7.16]" />
            <ueab:WriteCellX Cell="[Excel.Sheet(sn).Cell(&quot;O1&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="641.6,200" sap2010:WorkflowViewState.IdRef="WriteCellX_6" Value="[((Excel.Sheet(sn).Cell(&quot;O6&quot;)*3.4)/23)/7.16]" />
            <ueab:WriteCellX Cell="[Excel.Sheet(sn).Cell(&quot;R1&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="641.6,200" sap2010:WorkflowViewState.IdRef="WriteCellX_7" Value="[((Excel.Sheet(sn).Cell(&quot;R6&quot;)*15.7)/23)/7.16]" />
            <ueab:WriteCellX Cell="[Excel.Sheet(sn).Cell(&quot;T1&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="641.6,200" sap2010:WorkflowViewState.IdRef="WriteCellX_8" Value="[((Excel.Sheet(sn).Cell(&quot;T6&quot;)*1)/23)/7.16]" />
            <ueab:ReadCellValueX Cell="[Excel.Sheet(sn).Cell(&quot;M1&quot;)]" DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="641.6,200" sap2010:WorkflowViewState.IdRef="ReadCellValueX_6">
              <ueab:ReadCellValueX.SaveTo>
                <OutArgument x:TypeArguments="x:Double">[M1]</OutArgument>
              </ueab:ReadCellValueX.SaveTo>
            </ueab:ReadCellValueX>
            <ueab:ReadCellValueX Cell="[Excel.Sheet(sn).Cell(&quot;N1&quot;)]" DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="641.6,200" sap2010:WorkflowViewState.IdRef="ReadCellValueX_8">
              <ueab:ReadCellValueX.SaveTo>
                <OutArgument x:TypeArguments="x:Double">[N1]</OutArgument>
              </ueab:ReadCellValueX.SaveTo>
            </ueab:ReadCellValueX>
            <ueab:ReadCellValueX Cell="[Excel.Sheet(sn).Cell(&quot;O1&quot;)]" DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="641.6,200" sap2010:WorkflowViewState.IdRef="ReadCellValueX_7">
              <ueab:ReadCellValueX.SaveTo>
                <OutArgument x:TypeArguments="x:Double">[O1]</OutArgument>
              </ueab:ReadCellValueX.SaveTo>
            </ueab:ReadCellValueX>
            <ueab:ReadCellValueX Cell="[Excel.Sheet(sn).Cell(&quot;R1&quot;)]" DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="641.6,200" sap2010:WorkflowViewState.IdRef="ReadCellValueX_9">
              <ueab:ReadCellValueX.SaveTo>
                <OutArgument x:TypeArguments="x:Double">[R1]</OutArgument>
              </ueab:ReadCellValueX.SaveTo>
            </ueab:ReadCellValueX>
            <ueab:ReadCellValueX Cell="[Excel.Sheet(sn).Cell(&quot;T1&quot;)]" DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="641.6,183.2" sap2010:WorkflowViewState.IdRef="ReadCellValueX_10">
              <ueab:ReadCellValueX.SaveTo>
                <OutArgument x:TypeArguments="x:Double">[T1]</OutArgument>
              </ueab:ReadCellValueX.SaveTo>
            </ueab:ReadCellValueX>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelApplicationCard.Body>
    </ueab:ExcelApplicationCard>
    <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="737.6,281.6" sap2010:WorkflowViewState.IdRef="InputDialog_13" IsPassword="False" Label="Enter the manpower excel sheet" Title="Input">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[excel2]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="737.6,5141.6" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_3" ResizeWindow="None" WorkbookPath="[excel2]">
      <ueab:ExcelApplicationCard.Body>
        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="505.6,4832" sap2010:WorkflowViewState.IdRef="Sequence_20">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Double" Name="sum" />
              <Variable x:TypeArguments="x:Double" Name="war" />
              <Variable x:TypeArguments="x:Double" Name="qty" />
              <Variable x:TypeArguments="x:Double" Name="log" />
              <Variable x:TypeArguments="x:Double" Name="main" />
              <Variable x:TypeArguments="x:Double" Name="des" />
              <Variable x:TypeArguments="x:Double" Name="IE" />
              <Variable x:TypeArguments="x:Double" Name="plan" />
              <Variable x:TypeArguments="x:Double" Name="test" />
              <Variable x:TypeArguments="x:Double" Name="man" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Summary&quot;).Cell(&quot;F4&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="443.2,200" sap2010:WorkflowViewState.IdRef="WriteCellX_14" Value="[M1]" />
            <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Summary&quot;).Cell(&quot;F3&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="443.2,200" sap2010:WorkflowViewState.IdRef="WriteCellX_15" Value="[N1]" />
            <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Summary&quot;).Cell(&quot;F5&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="443.2,160" sap2010:WorkflowViewState.IdRef="WriteCellX_16" Value="[O1]" />
            <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Summary&quot;).Cell(&quot;F6&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="443.2,160" sap2010:WorkflowViewState.IdRef="WriteCellX_17" Value="[R1]" />
            <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Summary&quot;).Cell(&quot;F7&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="443.2,160" sap2010:WorkflowViewState.IdRef="WriteCellX_18" Value="[T1]" />
            <Assign sap:VirtualizedContainerService.HintSize="443.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_15">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Double">[sum]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Double">[(M1+N1+O1+R1+T1)*0.2]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="443.2,241.6" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="Enter the percentage for warehouse" Title="Warehouse">
              <ui:InputDialog.Result>
                <OutArgument x:TypeArguments="x:Double">[war]</OutArgument>
              </ui:InputDialog.Result>
            </ui:InputDialog>
            <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Summary&quot;).Cell(&quot;F8&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="443.2,160" sap2010:WorkflowViewState.IdRef="WriteCellX_19" Value="[(sum*war)/100]" />
            <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="443.2,241.6" sap2010:WorkflowViewState.IdRef="InputDialog_2" IsPassword="False" Label="Enter the percentage for quality" Title="Quality">
              <ui:InputDialog.Result>
                <OutArgument x:TypeArguments="x:Double">[qty]</OutArgument>
              </ui:InputDialog.Result>
            </ui:InputDialog>
            <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Summary&quot;).Cell(&quot;F9&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="443.2,160" sap2010:WorkflowViewState.IdRef="WriteCellX_20" Value="[(sum*qty)/100]" />
            <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="443.2,241.6" sap2010:WorkflowViewState.IdRef="InputDialog_3" IsPassword="False" Label="Enter the percentage for Logistics" Title="Logistics">
              <ui:InputDialog.Result>
                <OutArgument x:TypeArguments="x:Double">[log]</OutArgument>
              </ui:InputDialog.Result>
            </ui:InputDialog>
            <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Summary&quot;).Cell(&quot;F10&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="443.2,160" sap2010:WorkflowViewState.IdRef="WriteCellX_21" Value="[(sum*log)/100]" />
            <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="443.2,241.6" sap2010:WorkflowViewState.IdRef="InputDialog_4" IsPassword="False" Label="Enter the percentage for Maintenance" Title="Maintenance">
              <ui:InputDialog.Result>
                <OutArgument x:TypeArguments="x:Double">[main]</OutArgument>
              </ui:InputDialog.Result>
            </ui:InputDialog>
            <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Summary&quot;).Cell(&quot;F11&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="443.2,160" sap2010:WorkflowViewState.IdRef="WriteCellX_22" Value="[(sum*main)/100]" />
            <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="443.2,241.6" sap2010:WorkflowViewState.IdRef="InputDialog_5" IsPassword="False" Label="Enter the percentage for Design" Title="Design">
              <ui:InputDialog.Result>
                <OutArgument x:TypeArguments="x:Double">[des]</OutArgument>
              </ui:InputDialog.Result>
            </ui:InputDialog>
            <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Summary&quot;).Cell(&quot;F12&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="443.2,160" sap2010:WorkflowViewState.IdRef="WriteCellX_23" Value="[(sum*des)/100]" />
            <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="443.2,241.6" sap2010:WorkflowViewState.IdRef="InputDialog_6" IsPassword="False" Label="Enter the percentage IE/SCP" Title="IE/SCP">
              <ui:InputDialog.Result>
                <OutArgument x:TypeArguments="x:Double">[IE]</OutArgument>
              </ui:InputDialog.Result>
            </ui:InputDialog>
            <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Summary&quot;).Cell(&quot;F13&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="443.2,160" sap2010:WorkflowViewState.IdRef="WriteCellX_24" Value="[(sum*IE)/100]" />
            <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="443.2,241.6" sap2010:WorkflowViewState.IdRef="InputDialog_7" IsPassword="False" Label="Enter the percentage Planning" Title="Planning">
              <ui:InputDialog.Result>
                <OutArgument x:TypeArguments="x:Double">[plan]</OutArgument>
              </ui:InputDialog.Result>
            </ui:InputDialog>
            <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Summary&quot;).Cell(&quot;F14&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="443.2,160" sap2010:WorkflowViewState.IdRef="WriteCellX_25" Value="[(sum*plan)/100]" />
            <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="443.2,241.6" sap2010:WorkflowViewState.IdRef="InputDialog_8" IsPassword="False" Label="Enter the percentage Testing" Title="Testing">
              <ui:InputDialog.Result>
                <OutArgument x:TypeArguments="x:Double">[test]</OutArgument>
              </ui:InputDialog.Result>
            </ui:InputDialog>
            <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Summary&quot;).Cell(&quot;F15&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="443.2,160" sap2010:WorkflowViewState.IdRef="WriteCellX_26" Value="[(sum*test)/100]" />
            <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="443.2,241.6" sap2010:WorkflowViewState.IdRef="InputDialog_10" IsPassword="False" Label="Enter the percentage Manufacturing NPV" Title="Manufacturing NPV">
              <ui:InputDialog.Result>
                <OutArgument x:TypeArguments="x:Double">[man]</OutArgument>
              </ui:InputDialog.Result>
            </ui:InputDialog>
            <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Summary&quot;).Cell(&quot;F16&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="443.2,160" sap2010:WorkflowViewState.IdRef="WriteCellX_27" Value="[(sum*man)/100]" />
            <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="443.2,169.6" sap2010:WorkflowViewState.IdRef="ReadRangeX_1" Range="[Excel.Sheet(&quot;Summary&quot;)]" SaveTo="[result]" />
          </Sequence>
        </ActivityAction>
      </ueab:ExcelApplicationCard.Body>
    </ueab:ExcelApplicationCard>
    <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="692.8,769.6" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_4" ResizeWindow="None" WorkbookPath="[excel1]">
      <ueab:ExcelApplicationCard.Body>
        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,500" sap2010:WorkflowViewState.IdRef="Sequence_21">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:InsertSheetX DisplayName="Insert Sheet" sap:VirtualizedContainerService.HintSize="433.6,188" sap2010:WorkflowViewState.IdRef="InsertSheetX_1" Name="Summary" Workbook="[Excel]" />
            <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;Summary&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="433.6,160" sap2010:WorkflowViewState.IdRef="WriteRangeX_1" IgnoreEmptySource="False" Source="[result]" />
          </Sequence>
        </ActivityAction>
      </ueab:ExcelApplicationCard.Body>
    </ueab:ExcelApplicationCard>
    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="692.8,85.6" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;Task completed&quot;]" />
  </Sequence>
</Activity>